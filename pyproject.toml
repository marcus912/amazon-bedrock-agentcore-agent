[project]
name = "amazon-bedrock-agentcore-agent"
version = "0.1.0"
description = "Amazon Bedrock AgentCore Agent built with Strands SDK and deployed via Bedrock AgentCore"
authors = [
    {name = "Marcus", email = "marcuslin912@gmail.com"}
]
readme = "README.md"
requires-python = ">=3.10"
license = {text = "Apache-2.0"}

dependencies = [
    "strands-agents>=1.0.0",
    "strands-agents-tools>=0.2.0",
    "bedrock-agentcore>=0.1.0",
    "boto3>=1.34.0",
    "botocore>=1.34.0",
    "python-dotenv>=1.0.0",
    "pydantic>=2.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-cov>=4.1.0",
    "black>=24.0.0",
    "ruff>=0.3.0",
    "mypy>=1.9.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["agent", "tools"]

[tool.black]
line-length = 88
target-version = ['py310', 'py311', 'py312', 'py313']
include = '\.pyi?$'

[tool.ruff]
line-length = 88
target-version = "py310"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by black)
]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --cov=agent --cov=tools --cov-report=term-missing"

[dependency-groups]
dev = [
    "bedrock-agentcore-starter-toolkit>=0.1.27",
]
